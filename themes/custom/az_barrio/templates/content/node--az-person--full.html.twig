{#
/**
 * @file
 * Bootstrap Barrio's theme implementation to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 */
#}

{# <div class="callout callout-bloom">
  {{ devel_dump(content.field_az_media_image.0) }}
</div> #}

{{ attach_library('bootstrap_barrio/node') }}

{%
  set classes = [
    'node',
    'node--type-' ~ node.bundle|clean_class,
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not node.isPublished() ? 'node--unpublished',
    view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
    'clearfix',
  ]
%}
<div{{ attributes.addClass(classes) }}>
  <header>
    {{ title_prefix }}
    {% if label and not page %}
      <h2{{ title_attributes.addClass('node__title') }}>
        <a href="{{ url }}" rel="bookmark">{{ label }}</a>
      </h2>
    {% endif %}
    {{ title_suffix }}
    {% if display_submitted %}
      <div class="node__meta">
        {{ author_picture }}
        {% block submitted %}
          <em{{ author_attributes }}>
            {% trans %}Submitted by {{ author_name }} on {{ date }}{% endtrans %}
          </em>
        {% endblock %}
        {{ metadata }}
      </div>
    {% endif %}
  </header>
  <div{{ content_attributes.addClass('node__content', 'clearfix') }}>
    <div class="row d-md-none">
      <div class="col-12">
        <h1 class="text-blue my-0">{{ content.field_az_fname.0 }}&nbsp;{{ content.field_az_lname.0 }}</h1>
        {% if content.field_az_titles[0] %}
          {% for key, item in content.field_az_titles if key|first != '#' %}
            <span class="h4 d-block mt-0">{{ item }}</span>
          {% endfor %}
        {% endif %}
      </div>
    </div>
    <div class="row">
      <div class="col-12 col-md-8 order-2">

        <div class="d-none d-md-block">
          <h1 class="text-blue my-0">{{ content.field_az_fname.0 }}&nbsp;{{ content.field_az_lname.0 }}</h1>
          {% if content.field_az_titles[0] %}
            {% for key, item in content.field_az_titles if key|first != '#' %}
              <span class="h4 d-block mt-0">{{ item }}</span>
            {% endfor %}
          {% endif %}
        </div>

        {{ content.field_az_body }}

        {% if content.field_az_degrees[0] %}
          <h2 class="h3">Degrees</h2>
          <ul>
          {% for key, item in content.field_az_degrees if key|first != '#' %}
            <li>{{ item }}</li>
          {% endfor %}
          </ul>
        {% endif %}

        {% if content.field_az_person_category %}
          {% for key, item in content.field_az_person_category if key|first != '#' %}
            <a href="{{ item['#url'] }}" class="badge badge-light badge-link">{{ item['#title'] }}</a>
          {% endfor %}
        {% endif %}
        {% if content.field_az_person_category_sec %}
          {% for key, item in content.field_az_person_category_sec if key|first != '#' %}
            <a href="{{ item['#url'] }}" class="badge badge-light badge-link">{{ item['#title'] }}</a>
          {% endfor %}
        {% endif %}
      </div>

      <div class="col-12 col-md-4 order-1">
        <div class="card mb-4 mb-md-0">
        {% if content.field_az_media_image.0 %}
          {{ content.field_az_media_image.0 }}
        {% endif %}
          {% if content.field_az_address.0 %}
          <div class="card-body pb-0">
            {{ content.field_az_address.0 }}
          </div>
          {% endif %}
          {% if content.field_az_phones.0 or content.field_az_email.0 or content.field_az_links.0 or content.field_az_pronouns.0 %}
          <ul class="list-group list-group-flush border-0 py-3">
          {% if content.field_az_phones %}
            {% for key, item in content.field_az_phones if key|first != '#' %}
              <li class="list-group-item border-0 py-0">{{ item }}</li>
            {% endfor %}
          {% endif %}
          {% if content.field_az_email.0 %}
          <li class="list-group-item border-0 py-0">{{ content.field_az_email }}</li>
          {% endif %}
          {% if content.field_az_pronouns.0 %}
            <li class="list-group-item border-0 py-0">Pronouns: {{ content.field_az_pronouns.0|render|lower }}</li>
          {% endif %}
          {% if content.field_az_links %}
            {% for key, item in content.field_az_links if key|first != '#' %}
              <li class="list-group-item border-0 py-0">{{ item }}</li>
            {% endfor %}
          {% endif %}
          </ul>
          {% endif %}
          {% if content.field_az_attachments.0 %}
          <ul class="list-group list-group-flush border-0 py-3">
            {% for key, item in content.field_az_attachments if key|first != '#' %}
              <li class="list-group-item text-break border-0 py-0">{{ item }}</li>
            {% endfor %}
          </ul>
          {% endif %}
        </div>
      </div>
    </div>
  </div>
</div>
