<?php

/**
 * @file
 * Functions to support theming in the Arizona Barrio theme.
 */

//phpcs:ignore Security.BadFunctions.EasyRFI.WarnEasyRFI
include_once drupal_get_path('theme', 'az_barrio') . '/includes/common.inc';

use Drupal\Core\Link;
use Drupal\Core\Render\Markup;
use Drupal\Component\Utility\Html;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Render\Element;

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function az_barrio_theme_suggestions_form_element_alter(&$suggestions, $variables) {
  if (isset($variables['element']['#form_id']) && $variables['element']['#form_id'] === 'search_block_form') {
    $suggestions[] = 'form_element__form_id__' . $variables['element']['#form_id'];
    $suggestions[] = 'form_element__' . $variables['element']['#form_id'] . '__' . $variables['element']['#type'];
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function az_barrio_theme_suggestions_form_element_label_alter(&$suggestions, $variables) {
  if (isset($variables['element']['#form_id']) && $variables['element']['#form_id'] === 'search_block_form') {
    $suggestions[] = 'form_element_label__form-id__' . $variables['element']['#form_id'];
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function az_barrio_theme_suggestions_input_alter(&$suggestions, $variables) {
  if (isset($variables['element']['#form_id']) && $variables['element']['#form_id'] === 'search_block_form') {
    $suggestions[] = 'input__' . $variables['element']['#form_id'];
  }
  if (isset($variables['element']['#type']) && isset($variables['element']['#form_id']) && $variables['element']['#form_id'] === 'search_block_form') {
    $suggestions[] = 'input__' . $variables['element']['#form_id'] . '__' . $variables['element']['#type'];
  }
}

/**
 * Implements hook_preprocess_form_element().
 */
function az_barrio_preprocess_form_element(array &$variables) {
  if (isset($variables['element']['#form_id']) && $variables['element']['#form_id'] === 'search_block_form') {
    $variables['label']['#form_id'] = $variables['element']['#form_id'];
  }
}

/**
 * Implements hook_form_alter().
 */
function az_barrio_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if( $form_id === 'search_block_form') {
    az_barrio_attach_form_id($form, $form_id);
  }
}

/**
 * Attaches form id to all form elements.
 *
 * @param $form
 *   The form or form element which children should have form id attached.
 * @param $form_id
 *   The form id attached to form elements.
 *
 * @return array
 */
function az_barrio_attach_form_id(&$form, $form_id) {
  if ($form_id === 'search_block_form') {
    foreach (Element::children($form) as $child) {
      if (!isset($form[$child]['#form_id'])) {
        $form[$child]['#form_id'] = $form_id;
      }
      az_barrio_attach_form_id($form[$child], $form_id);
    }
  }
}

/**
 * Implements hook_preprocess_HOOK() for HTML document templates.
 *
 * Adds html classes based on AZ Barrio options.
 */
function az_barrio_preprocess_html(&$variables) {
  if (theme_get_setting('sticky_footer')) {
    $variables['html_attributes']->addClass('sticky-footer');
  }
  if (theme_get_setting('external_links')) {
    $variables['html_attributes']->addClass('external-links');
  }
  if (theme_get_setting('az_brand_icons_class')) {
    $variables['html_attributes']->addClass('ua-brand-icons');
  }
}

/**
 * Implements hook_preprocess_HOOK() for page templates.
 */
function az_barrio_preprocess_page(&$variables, $hook) {
  $variables['az_barrio_navbar_offcanvas'] = (theme_get_setting('az_barrio_navbar_offcanvas')) ? TRUE : FALSE;
  if ($variables['az_barrio_navbar_offcanvas'] === TRUE) {
    $variables['#attached']['library'][] = 'az_barrio/az-barrio-off-canvas-nav';
  }
  $variables['navbar_offcanvas_attributes'] = [
    'class' => [ 'navbar-offcanvas' ],
    'id' => 'navbar-top',
  ];

  // Allow hiding of title of front page node.
  if (theme_get_setting('az_hide_front_title') === 1 && \Drupal::service('path.matcher')->isFrontPage()) {
    // $variables['title'] = FALSE;
  }

  // Check if information security policy should be displayed.
  $info_security_privacy = '';
  if (theme_get_setting('info_security_privacy')) {
    $info_security_privacy = '<p class="small"><a href="https://www.arizona.edu/information-security-privacy" target="_blank">University Information Security and Privacy</a></p>';
  }

  // Determine what copyright notice to display.
  $copyright_notice = theme_get_setting('copyright_notice');
  $copyright_notice_format = '<p class="small">&copy; ' . date('Y') . ' %s</p>';
  if (!empty($copyright_notice)) {
    $copyright_notice = sprintf($copyright_notice_format, $copyright_notice);
  }
  else {
    $copyright_notice = sprintf($copyright_notice_format, 'The Arizona Board of Regents on behalf of <a href="https://www.arizona.edu" target="_blank">The University of Arizona</a>.');
  }

  $variables['logo'] = az_barrio_primary_logo();
  $variables['info_security_privacy'] = Markup::create($info_security_privacy);
  $variables['copyright_notice'] = Markup::create($copyright_notice);
  $variables['footer_logo'] = az_barrio_footer_logo();

  // Allow wordmark to be disabled.
  $variables['wordmark'] = (theme_get_setting('wordmark')) ? TRUE : FALSE;
}

/**
 * Implements hook_preprocess_HOOK() for image styles.
 */
function az_barrio_preprocess_image_style(&$variables) {
  if (!\Drupal::moduleHandler()->moduleExists('image_class')) {
    $variables['image']['#attributes']['class'][] = 'img-fluid';
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for containers.
 */
function az_barrio_theme_suggestions_container_alter(array &$suggestions, array &$variables) {
  $suggestions = [];

  $element = $variables['element'];

  // We cannot count on template_preprocess_container having run, so we copy
  // its logic here to provide templates for forms (has parents) or not forms.
  // Special handling for form elements.
  if (isset($element['#array_parents'])) {
    $suggestions[] = 'container__has_parent';
  }
  else {
    $suggestions[] = 'container__no_parent';
  }

  if (isset($element['#type']) && $element['#type'] !== 'container') {
    $suggestions[] = 'container__' . $element['#type'];
  }
  if (isset($element['submit']) && isset($element['submit']['#form_id'])) {
    $suggestions[] = 'container__' . $element['submit']['#form_id'] . '__' .  $element['#type']  ;
  }
  if (isset($element['#type']) && $element['#type'] === 'container' && isset($element['children']['#type'])) {
    $suggestions[] = 'container__' . $element['children']['#type'];
  }
  if (isset($element['#type']) && $element['#type'] === 'view') {
    $suggestions[] = 'container__view__' . $element['#name'];
    $suggestions[] = 'container__view__' . $element['#name'] . '__' . $element['#display_id'];
  }
  elseif (isset($element['widget'][0]['#type']) && $element['widget'][0]['#type'] === 'managed_file') {
    $suggestions[] = 'container__file';
    $suggestions[] = 'container__file__' . $element['widget']['#field_name'];
  }

  // Additional module-specific container templates.
  if (isset($element['#group'])) {
    $suggestions[] = 'container__' . str_replace('-', '_', $element['#group']);
  }

  if (isset($element['#webform_key'])) {
    $suggestions[] = 'container__' . str_replace('-', '_', $element['#webform_key']);
  }
}

/**
 * Implements hook_preprocess_input().
 */
function az_barrio_preprocess_input(&$variables) {
  if ($variables['attributes']['type'] === 'search') {
    $variables['attributes']['placeholder'] = $variables['element']['#title'];
    $variables['attributes']['aria-label'] = $variables['element']['#title'];
  }
}

/**
 * Implements template_preprocess_maintenance_page().
 */
function az_barrio_preprocess_maintenance_page(&$variables) {
  $variables['logo'] = az_barrio_primary_logo();
}

/**
 * Implements hook_library_info_alter().
 */
function az_barrio_library_info_alter(&$libraries, $extension) {
  if ($extension === 'bootstrap_barrio' && isset($libraries['global-styling'])) {
    // Remove sidebar styles.
    unset($libraries['global-styling']['css']['component']['css/components/sidebar.css']);
    // Remove site-footer styles.
    unset($libraries['global-styling']['css']['component']['css/components/site-footer.css']);
  }
  if ($extension === 'az_barrio' && isset($libraries['arizona-bootstrap'])) {
    if (isset($libraries['global-styling'])) {
      $libraries['global-styling']['dependencies'][] = 'az_barrio/az-barrio-off-canvas-nav';
    }
    // Add AZ Bootstrap CSS & JS based on theme settings.
    $az_bootstrap_css_path = az_barrio_az_bootstrap_assets_path('css');
    $az_bootstrap_js_path = az_barrio_az_bootstrap_assets_path('js');
    if (!$az_bootstrap_css_path || !$az_bootstrap_js_path) {
      return;
    }

    $az_bootstrap_token = '';
    $az_bootstrap_css_info = [
      'media' => 'all',
      'preprocess' => FALSE,
      'browsers' => [
        'IE' => TRUE,
        '!IE' => TRUE,
      ],
      'minified' => FALSE,
    ];
    $az_bootstrap_js_info = [
      'preprocess' => FALSE,
    ];

    // AZ Bootstrap source.
    if (theme_get_setting('az_bootstrap_source') === 'cdn') {
      // AZ Bootstrap CDN version.
      if (theme_get_setting('az_bootstrap_cdn_version') !== 'stable') {
        $az_bootstrap_token = '?=' . \Drupal::state()->get('system.css_js_query_string') ?: '0';
      }
      $az_bootstrap_css_info['type'] = 'external';
      $az_bootstrap_js_info['type'] = 'external';
    }
    else {
      $az_bootstrap_css_info['type'] = 'file';
      $az_bootstrap_js_info['type'] = 'file';
    }

    if (theme_get_setting('az_bootstrap_minified')) {
      $az_bootstrap_css_info['minified'] = TRUE;
    }

    $az_bootstrap_css_path .= $az_bootstrap_token;
    $az_bootstrap_js_path .= $az_bootstrap_token;
    $libraries['arizona-bootstrap']['css']['theme'] = [
      $az_bootstrap_css_path => $az_bootstrap_css_info,
    ];
    $libraries['arizona-bootstrap']['js'] = [
      $az_bootstrap_js_path => $az_bootstrap_js_info,
    ];

    // Populate AZ Bootstrap location variable for CKEditor.
    \Drupal::state()->set(AZ_BOOTSTRAP_LOCATION, $az_bootstrap_css_path . $az_bootstrap_token);
  }

  if ($extension === 'az_barrio' && isset($libraries['az-brand-icons'])) {
    // Add UA Brand Icons CSS based on theme settings.
    $az_brand_icons_path = az_barrio_brand_icons_assets_path('css');
    // Ensure icons are loaded before arizona bootstrap.
    $libraries['arizona-bootstrap']['dependencies'][] = 'az_barrio/az-brand-icons';

    $az_brand_icons_css_info = [
      'media' => 'all',
      'preprocess' => FALSE,
      'browsers' => [
        'IE' => TRUE,
        '!IE' => TRUE,
      ],
      'minified' => TRUE,
    ];

    // AZ Brand Icons source.
    if (theme_get_setting('az_brand_icons_source') === 'cdn') {
      $az_brand_icons_css_info['type'] = 'external';
    }
    else {
      $az_brand_icons_css_info['type'] = 'file';
    }
    $libraries['az-brand-icons']['css']['theme'] = [
      $az_brand_icons_path => $az_brand_icons_css_info,
    ];
    $font = theme_get_setting('az_barrio_font');
    if ($font === TRUE) {
      // Add Proxima Nova CSS based on theme settings.
      // Ensure Proxima Nova is loaded before Arizona Bootstrap.
      $libraries['arizona-bootstrap']['dependencies'][] = 'az_barrio/az-proxima-nova';
    }

    $material_design_sharp_icons = theme_get_setting('az_barrio_material_design_sharp_icons');
    if ($material_design_sharp_icons === TRUE) {
      // Add Material Design Sharp Icon CSS based on theme settings.
      // Ensure icon CSS is loaded before Arizona Bootstrap.
      $libraries['arizona-bootstrap']['dependencies'][] = 'az_barrio/material-design-icons-sharp';
    }
  }
}

/**
 * Helper function for constructing AZ Bootstrap asset paths.
 */
function az_barrio_az_bootstrap_assets_path($type) {
  if (empty($type)) {
    return FALSE;
  }

  $az_bootstrap_path = '';

  // AZ Bootstrap source.
  if (theme_get_setting('az_bootstrap_source') === 'cdn') {
    $az_bootstrap_cdn_version = theme_get_setting('az_bootstrap_cdn_version');
    if ($az_bootstrap_cdn_version === 'stable') {
      $az_bootstrap_cdn_version = AZ_BOOTSTRAP_STABLE_VERSION;
    }
    $az_bootstrap_path = 'https://cdn.digital.arizona.edu/lib/arizona-bootstrap/' . $az_bootstrap_cdn_version;
  }
  else {
    $az_bootstrap_path = base_path() . 'libraries/arizona-bootstrap';
  }

  $az_bootstrap_path .= '/' . $type . '/arizona-bootstrap';

  // Use AZ Bootstrap Javascript bundle (contains Popper.js).
  if ($type === 'js') {
    $az_bootstrap_path .= '.bundle';
  }

  // AZ Bootstrap minified.
  if (theme_get_setting('az_bootstrap_minified')) {
    $az_bootstrap_path .= '.min';
  }

  return $az_bootstrap_path . '.' . $type;
}

/**
 * Helper function for constructing UA Brand Icons asset paths.
 */
function az_barrio_brand_icons_assets_path($type) {
  $az_brand_icons_path = '';

  // AZ Brand Icons source.
  if (theme_get_setting('az_brand_icons_source') === 'cdn') {
    $az_brand_icons_path = 'https://cdn.uadigital.arizona.edu/lib/ua-brand-icons/' . AZ_BRAND_ICONS_STABLE_VERSION . '/ua-brand-icons.min.css';
  }
  else {
    $az_brand_icons_path = 'libraries/ua-brand-icons/ua-brand-icons.min.css';
  }

  return $az_brand_icons_path;
}

/**
 * Helper function for the primary logo.
 */
function az_barrio_primary_logo() {
  $return = '';
  $primary_logo_path = theme_get_setting('logo');
  $primary_alt_text = Html::escape(theme_get_setting('primary_logo_alt_text'));
  $primary_title_text = Html::escape(theme_get_setting('primary_logo_title_text'));

  if (\Drupal::moduleHandler()->moduleExists('token')) {
    $token_service = \Drupal::token();
    $primary_alt_text = $token_service->replace($primary_alt_text);
    $primary_title_text = $token_service->replace($primary_title_text);
  }

  // Set primary logo.
  if (!empty($primary_logo_path)) {
    $url = file_create_url($primary_logo_path['path']);
    $image = '<img src="' . $url . '" alt="' . $primary_alt_text . '" class="img-fluid" />';
    $rendered_image = render($image);
    $image_markup = Markup::create($rendered_image);

    $return = Link::createFromRoute($image_markup, '<front>', [], [
      'attributes' => [
        'title' => $primary_title_text,
        'class' => ['header_logo'],
        'rel' => 'home',
      ],
    ]
    );
  }

  return $return;
}

/**
 * Helper function for the secondary footer logo option.
 */
function az_barrio_footer_logo() {
  $return = '';
  $footer_logo_path = theme_get_setting('footer_logo');
  $footer_link_destination = theme_get_setting('footer_logo_link_destination');
  $footer_alt_text = Html::escape(theme_get_setting('footer_logo_alt_text'));
  $footer_title_text = Html::escape(theme_get_setting('footer_logo_title_text'));

  if (\Drupal::moduleHandler()->moduleExists('token')) {
    $token_service = \Drupal::token();
    $footer_alt_text = $token_service->replace($footer_alt_text);
    $footer_title_text = $token_service->replace($footer_title_text);
  }

  // Set footer logo.
  if (!empty($footer_logo_path)) {
    $url = file_create_url($footer_logo_path);
    $image = '<img src="' . $url . '" alt="' . $footer_alt_text . '" class="img-fluid pb-4" />';
    $rendered_image = render($image);
    $image_markup = Markup::create($rendered_image);

    $footer_link_destination = (!empty($footer_link_destination)) ? $footer_link_destination : '<front>';
    $return = Link::createFromRoute($image_markup, $footer_link_destination, [], [
      'attributes' => [
        'title' => $footer_title_text,
        'rel' => 'home',
      ],
    ]
    );
  }
  // Fallback to primary logo when footer logo settings are not configured.
  else {
    $return = az_barrio_primary_logo();
  }

  return $return;
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function az_barrio_theme_suggestions_menu_alter(array &$suggestions, array $variables) {
  if (isset($variables['attributes']['id'])) {
    $blockid = str_replace(['block-', '-'], ['', '_'], $variables['attributes']['id']);
    $suggestions[] = $variables['theme_hook_original'] . '__' . $variables['attributes']['block'];
  }
}
