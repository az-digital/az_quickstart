name: PR Checks
on:
  pull_request:
  push:
    branches:
      - 'main'
      - '2.13.x'
      - '2.12.x'
      - '2.11.x'

jobs:
  composer-validate:
    name: composer validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
      - name: composer version
        run: composer --version
      - name: composer validate
        run: composer validate

  composer:
    name: composer install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
      - name: Find the push source branch name
        if: ${{ github.event_name != 'pull_request' }}
        run: echo "AZ_TRIMMED_REF=${GITHUB_REF#refs/*/}" >> ${GITHUB_ENV}
      - name: Find the pull request source branch name
        if: ${{ github.event_name == 'pull_request' }}
        run: echo "AZ_TRIMMED_REF=${GITHUB_HEAD_REF}" >> ${GITHUB_ENV}
      - name: Set variables
        run: |
          if [ $(git ls-remote --heads https://github.com/az-digital/az-quickstart-scaffolding.git $AZ_TRIMMED_REF | wc -l) = 1 ]; then
            echo "SCAFFOLD_BRANCH=${AZ_TRIMMED_REF}" >> ${GITHUB_ENV}
          else
            echo "SCAFFOLD_BRANCH=main" >> ${GITHUB_ENV}
          fi
          if [ $(git ls-remote --heads https://github.com/az-digital/az-quickstart-dev.git $AZ_TRIMMED_REF | wc -l) = 1 ]; then
            echo "DEV_PACKAGE_BRANCH=${AZ_TRIMMED_REF}" >> ${GITHUB_ENV}
          else
            echo "DEV_PACKAGE_BRANCH=main" >> ${GITHUB_ENV}
          fi
      - name: Clone scaffolding repo
        uses: actions/checkout@v4
        with:
          repository: az-digital/az-quickstart-scaffolding
          path: az-quickstart-scaffolding
          ref: ${{ env.SCAFFOLD_BRANCH }}
      - name: Install dependencies
        run: |
          cd az-quickstart-scaffolding
          composer config repositories.az_quickstart vcs https://github.com/az-digital/az_quickstart.git
          composer config use-github-api false
          ./quickstart_branch.sh --branch ${AZ_TRIMMED_REF}
          composer require --no-update --dev az-digital/az-quickstart-dev:dev-${DEV_PACKAGE_BRANCH}
          composer install -o
      - name: Save build artifact
        uses: actions/cache/save@v4
        with:
          path: ${{ github.workspace }}/az-quickstart-scaffolding
          key: azqs-build-${{ github.sha }}

  phpcs:
    name: PHP_CodeSniffer
    needs: composer
    runs-on: ubuntu-latest
    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          tools: cs2pr, phpcs
      - uses: actions/cache/restore@v4
        with:
          path: ${{ github.workspace }}/az-quickstart-scaffolding
          key: azqs-build-${{ github.sha }}
      - name: Run phpcs
        run: |
          cd $GITHUB_WORKSPACE/az-quickstart-scaffolding
          ./vendor/bin/phpcs --standard=web/profiles/custom/az_quickstart/phpcs.xml.dist -q --report=checkstyle | cs2pr

  phpstan:
    name: PHPStan
    needs: composer
    runs-on: ubuntu-latest
    steps:
      - uses: actions/cache/restore@v4
        with:
          path: ${{ github.workspace }}/az-quickstart-scaffolding
          key: azqs-build-${{ github.sha }}
      - name: Run phpstan
        run: |
          cd $GITHUB_WORKSPACE/az-quickstart-scaffolding
          ./vendor/bin/phpstan analyse --configuration web/profiles/custom/az_quickstart/phpstan.neon web/profiles/custom/az_quickstart

  composer-audit:
    name: composer audit (security)
    needs: composer
    runs-on: ubuntu-latest
    steps:
      - uses: actions/cache/restore@v4
        with:
          path: ${{ github.workspace }}/az-quickstart-scaffolding
          key: azqs-build-${{ github.sha }}
      - name: Run composer audit
        run: |
          cd az-quickstart-scaffolding
          composer audit

  eslint:
    name: eslint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 20.13.0
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run eslint
        run: |
          yarn install
          yarn run eslint --color .
      - name: Generate eslint report
        run: yarn run eslint . --format json --output-file eslint-report.json
      - name: Annotate eslint results
        uses: ataylorme/eslint-annotate-action@v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          report-json: "eslint-report.json"
