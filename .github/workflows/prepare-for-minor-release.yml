name: Prepare repository for new minor release
run-name: Update az_quickstart repository for new `${{ inputs.release_branch_name }}` minor release branch (from `${{ github.ref_name }}`).
on:
  workflow_dispatch:
    inputs:
      release_branch_name:
        description: The name of the new release branch (e.g. 2.9.x) to create.
        required: true

jobs:
  print_inputs:
    runs-on: ubuntu-latest
    steps:
      - name: Print inputs
        run: |
          echo "release_branch_name: ${{ inputs.release_branch_name }}"

  validate_source_branch:
    runs-on: ubuntu-latest
    if: ${{ ! contains(fromJSON('["main", "2.x"]'), github.ref_name) }}
    steps:
      - name: Validate source branch
        run: |
          echo "Workflow triggered from invalid branch: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "Worfklow must be triggerd from a valid development branch (i.e. main or 2.x)" >> $GITHUB_STEP_SUMMARY
          exit 1

  validate_release_branch:
    runs-on: ubuntu-latest
    env:
      NEW_VERSION: ${{ inputs.release_branch_name }}
    steps:
      - name: Ensure correct minor release branch sequence
        shell: bash
        run: |
          if [ $(git ls-remote --heads https://github.com/az-digital/az_quickstart.git $NEW_VERSION | wc -l) = 1 ]; then
            echo "Requested minor release branch name already exists: $NEW_VERSION" >> $GIHUB_STEP_SUMMARY
            exit 1
          fi
          delimiter=.
          prev_minor=($(echo $NEW_VERSION | tr $delimiter '\n'))
          prev_minor[1]=$((next_minor_branch[1]-1))
          prev_minor_branch=$(IFS=$delimiter ; echo "${prev_minor[*]}" | sed 's/\(.*\)/\1/')
          if [ $(git ls-remote --heads https://github.com/az-digital/az_quickstart.git $NEW_VERSION | wc -l) = 0 ]; then
            echo "Previous minor release branch name doesn't exist yet: $prev_minor_branch" >> $GIHUB_STEP_SUMMARY
            exit 1
          fi
      - name: Validation for 2.x release branches
        if: github.ref_name == '2.x'
        id: validate-2-x-release-branch-name
        shell: bash
        run: |
          if [[ ${NEW_VERSION} =~ ^2\.[0-9]*\.x$ ]]; then
            echo "Requested branch name is not valid for a 2.x minor release branch (i.e. 2.*.x): $NEW_VERSION" >> $GIHUB_STEP_SUMMARY
            exit 1
          fi
      - name: Validation for main (3.x) release branches
        if: github.ref_name == 'main'
        shell: bash
        run: |
          if [[ ${NEW_VERSION} =~ ^3\.[0-9]*\.x$ ]]; then
            echo "Requested branch name is not valid for a 3.x minor release branch (i.e. 3.*.x): $NEW_VERSION" >> $GIHUB_STEP_SUMMARY
            exit 1
          fi

  branch_name_prep:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    outputs:
      next_minor_release: ${{ steps.define-version-variables.outputs.NEXT_MINOR_RELEASE }}
      next_release_branch_alias_constraint: ${{ steps.define-version-variables.outputs.NEXT_RELEASE_VERSION_CONSTRAINT }}
      this_release_branch_alias_constraint: ${{ steps.define-version-variables.outputs.THIS_RELEASE_VERSION_CONSTRAINT }}
      dev_branch_source: ${{ steps.define-version-variables.outputs.DEV_BRANCH_SOURCE }}
      dev_branch_alias: ${{ steps.define-version-variables.outputs.DEV_BRANCH_ALIAS }}
    steps:
      - name: Define version variables
        id: define-version-variables
        shell: bash
        run: |
          delimiter=.
          version_parts=($(echo ${{ inputs.release_branch_name }} | tr $delimiter '\n'))
          version_parts[1]=$((version_parts[1]+1))
          NEXT_MINOR_RELEASE=$(IFS=$delimiter ; echo "${version_parts[*]}" | sed 's/\(.*\)\.x/\1/')
          NEXT_RELEASE_VERSION_CONSTRAINT="~${NEXT_MINOR_RELEASE}"
          echo "NEXT_MINOR_RELEASE=${NEXT_MINOR_RELEASE}" >> $GITHUB_OUTPUT
          echo "NEXT_RELEASE_VERSION_CONSTRAINT=${NEXT_RELEASE_VERSION_CONSTRAINT}" >> $GITHUB_OUTPUT
          echo "Next minor release: $NEXT_MINOR_RELEASE" >> $GITHUB_STEP_SUMMARY
          echo "Next release version constraint: $NEXT_RELEASE_VERSION_CONSTRAINT" >> $GITHUB_STEP_SUMMARY
          THIS_RELEASE_VERSION_CONSTRAINT=$(echo ${{ inputs.release_branch_name }} | sed 's/\(.*\)\.x/~\1/')
          echo "THIS_RELEASE_VERSION_CONSTRAINT=${THIS_RELEASE_VERSION_CONSTRAINT}" >> $GITHUB_OUTPUT
          echo "This release version constraint: $THIS_RELEASE_VERSION_CONSTRAINT" >> $GITHUB_STEP_SUMMARY
          if [[ ${GITHUB_REF_NAME} =~ ^[0-9]\.[0-9x] ]]; then
            DEV_BRANCH_SOURCE="${GITHUB_REF_NAME}-dev"
          else
            DEV_BRANCH_SOURCE="dev-${GITHUB_REF_NAME}"
          fi
          echo "DEV_BRANCH_SOURCE=${DEV_BRANCH_SOURCE}" >> $GITHUB_OUTPUT
          echo "Dev branch source: $DEV_BRANCH_SOURCE" >> $GITHUB_STEP_SUMMARY
          DEV_BRANCH_ALIAS="${NEXT_MINOR_RELEASE}.x-dev"
          echo "DEV_BRANCH_ALIAS=${DEV_BRANCH_ALIAS}" >> $GITHUB_OUTPUT
          echo "Dev branch alias: $DEV_BRANCH_ALIAS" >> $GITHUB_STEP_SUMMARY

  dispatch:
    needs: 
      - validate_source_branch
      - validate_release_branch
      - branch_name_prep
    strategy:
      matrix:
        repo:
          - az-digital/az-quickstart-scaffolding
    runs-on: ubuntu-latest
    steps:
      - name: Notify dependencies
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.REPO_DISPATCH_TOKEN }}
          repository: ${{ matrix.repo }}
          event-type: az_quickstart_prep_for_minor_release
          client-payload: '{"source_branch_name": "${{ github.ref_name }}", "release_branch_name": "${{ inputs.release_branch_name }}", "this_release_branch_alias_constraint": "${{needs.branch_name_prep.outputs.this_release_branch_alias_constraint}}", "dev_branch_source": "${{needs.branch_name_prep.outputs.dev_branch_source}}", "dev_branch_alias": "${{needs.branch_name_prep.outputs.dev_branch_alias}}", "next_release_branch_alias_constraint": "${{needs.branch_name_prep.outputs.next_release_branch_alias_constraint}}"}'

  prepare_for_new_minor_release:
    name: Prepare for a new minor release
    runs-on: ubuntu-latest
    needs:
      - validate_source_branch
      - validate_release_branch
      - branch_name_prep
    env:
      NEW_VERSION: ${{ inputs.release_branch_name }}
    steps:
    - name: Checkout az_quickstart
      uses: actions/checkout@v4
      with:
        repository: az-digital/az_quickstart
        ref: ${{ github.ref_name }}
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Create and check out release branch
      run: |
        git checkout -b ${{ inputs.release_branch_name }}

    - name: Set up git
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com

    - name: Push new release branch to GitHub
      run: |
        git commit --allow-empty -m "Prepare for new minor release ${{ inputs.release_branch_name }}"
        git push origin -u ${{ inputs.release_branch_name }}

    - name: Update DDev config in release branch
      run: |
        sed -i "0,/main/s//$NEW_VERSION/" .ddev/commands/web/install

    - name: Update Security workflow yml in release branch
      run: |
        sed -i "s/SCAFFOLD_BRANCH=main/SCAFFOLD_BRANCH=$NEW_VERSION/g" .github/workflows/security.yml

    - name: Update Create Release workflow yml in release branch
      run: |
        sed -i "s/SCAFFOLD_BRANCH=main/SCAFFOLD_BRANCH=$NEW_VERSION/g" .github/workflows/create-release.yml

    - name: Update Lando config in release branch
      run: |
        sed -i "s/SCAFFOLD_BRANCH=$GITHUB_REF_NAME/SCAFFOLD_BRANCH=$NEW_VERSION/g" .lando.yml

    - name: Update Probo config in release branch
      run: |
        sed -i "s/SCAFFOLD_BRANCH=main/SCAFFOLD_BRANCH=$NEW_VERSION/g" .probo.yaml

    - name: Setup PHP with composer v2
      uses: shivammathur/setup-php@v2
      with:
         php-version: '8.3'
         tools: composer:v2

    - name: Remove composer dev branch alias(es) (not needed for release branches)
      run: |
        composer config --unset extra.branch-alias
        composer validate

    - name: Create pull request for new release branch updates
      uses: peter-evans/create-pull-request@v7
      with:
        title: Prepare repository for new minor release branch ${{ inputs.release_branch_name }}
        commit-message: Prepare repository for new minor release branch ${{ inputs.release_branch_name }}
        branch: prepare-${{ inputs.release_branch_name }}-for-minor-release
        base: ${{ inputs.release_branch_name }}
        delete-branch: true
        token: ${{ secrets.REPO_DISPATCH_TOKEN }}
        labels: |
          ${{ inputs.release_branch_name }} only
        add-paths: |
          .ddev/commands/web/install
          .github/workflows/security.yml
          .github/workflows/create-release.yml
          .lando.yml
          .probo.yaml
          composer.json

  update_composer_dev_branch_alias_on_dev_branch:
    needs:
      - validate_source_branch
      - validate_release_branch
      - branch_name_prep
      - prepare_for_new_minor_release
    runs-on: ubuntu-latest
    name: Update the composer dev branch alias on the `${{ github.ref_name }}` branch.
    steps:
      - name: Update `${{ github.ref_name }}` branch with new minor release branch alias.
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
          token: ${{ secrets.REPO_DISPATCH_TOKEN }}

      - name: Set up Git
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@github.com"

      - name: Setup PHP with composer v2
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          tools: composer:v2

      - name: Update dev branch alias via Composer
        run: |
          composer config extra.branch-alias.${{ needs.branch_name_prep.outputs.dev_branch_source }} ${{ needs.branch_name_prep.outputs.dev_branch_alias }}
          composer validate

      - name: Create pull request for `${{ github.ref_name }}` branch updates
        uses: peter-evans/create-pull-request@v7
        with:
          title: Prepare `${{ github.ref_name }}` branch for new minor release branch ${{ inputs.release_branch_name }}
          commit-message: Prepare `${{ github.ref_name }}` branch for new minor release branch ${{ inputs.release_branch_name }}
          branch: update-${{ github.ref_name }}-for-${{ inputs.release_branch_name }}
          base: ${{ github.ref_name }}
          labels: |
            task
          delete-branch: true
          token: ${{ secrets.REPO_DISPATCH_TOKEN }}
          add-paths: |
            composer.json
