diff --git a/better_exposed_filters.info.yml b/better_exposed_filters.info.yml
index 82d55e299d8628a450b6bdb78afceb51ef39538b..5fba5145cddfa8878c1513c4f2c6f8d98ed73ab1 100644
--- a/better_exposed_filters.info.yml
+++ b/better_exposed_filters.info.yml
@@ -6,6 +6,5 @@ package: Views
 dependencies:
   - drupal:views
   - jquery_ui:jquery_ui
-  - jquery_ui_slider:jquery_ui_slider
   - jquery_ui_touch_punch:jquery_ui_touch_punch
   - jquery_ui_datepicker:jquery_ui_datepicker
diff --git a/better_exposed_filters.libraries.yml b/better_exposed_filters.libraries.yml
index 2a7a85d8dc9ebb2cb4aca4bfc43e6d5f66157604..186b4b049079f0aeaaa53d3443c5a4e02c353482 100644
--- a/better_exposed_filters.libraries.yml
+++ b/better_exposed_filters.libraries.yml
@@ -32,9 +32,7 @@ sliders:
     - core/drupal
     - core/jquery
     - core/jquery.once
-    - jquery_ui/mouse
-    - jquery_ui_touch_punch/touch-punch
-    - jquery_ui_slider/slider
+    - better_exposed_filters/nouislider
 datepickers:
   version: 4.x
   js:
@@ -45,3 +43,27 @@ datepickers:
     - jquery_ui/mouse
     - jquery_ui_touch_punch/touch-punch
     - jquery_ui_datepicker/datepicker
+nouislider:
+  remote: https://refreshless.com/nouislider/
+  version: 15.5.1
+  license:
+    name: MIT
+    url: https://github.com/leongersen/noUiSlider/blob/master/LICENSE.md
+    gpl-compatible: true
+  js:
+    https://cdnjs.cloudflare.com/ajax/libs/noUiSlider/15.5.1/nouislider.min.js:
+      type: external
+      minified: true
+      attributes:
+        crossorigin: anonymous
+        integrity: "sha512-T5Bneq9hePRO8JR0S/0lQ7gdW+ceLThvC80UjwkMRz+8q+4DARVZ4dqKoyENC7FcYresjfJ6ubaOgIE35irf4w=="
+        referrerpolicy: no-referrer
+  css:
+    component:
+      https://cdnjs.cloudflare.com/ajax/libs/noUiSlider/15.5.1/nouislider.min.css:
+        type: external
+        minified: true
+        attributes:
+          crossorigin: anonymous
+          integrity: "sha512-qveKnGrvOChbSzAdtSs8p69eoLegyh+1hwOMbmpCViIwj7rn4oJjdmMvWOuyQlTOZgTlZA0N2PXA7iA8/2TUYA=="
+          referrerpolicy: no-referrer
diff --git a/composer.json b/composer.json
index ecb7f759601258b94bc64f9680f7f801c1d002e3..d5ac97658b001017c76c3a222862778683d19fc2 100644
--- a/composer.json
+++ b/composer.json
@@ -30,7 +30,6 @@
   ],
   "require": {
     "drupal/jquery_ui": "^1.4",
-    "drupal/jquery_ui_slider": "^1.1",
     "drupal/jquery_ui_touch_punch": "^1.0",
     "drupal/jquery_ui_datepicker": "^1.0"
   }
diff --git a/config/schema/better_exposed_filters.filter.schema.yml b/config/schema/better_exposed_filters.filter.schema.yml
index 6561984059d81d7b0b712e2a1854811a4473680f..b54f238278a1a2bfa4404e4370a4aca41aace71e 100644
--- a/config/schema/better_exposed_filters.filter.schema.yml
+++ b/config/schema/better_exposed_filters.filter.schema.yml
@@ -83,7 +83,7 @@ better_exposed_filters.filter.bef_sliders:
       label: 'Animation speed'
     animate_ms:
       type: string
-      label: 'Animation speed in milliseconds'
+      label: 'Custom animation speed in milliseconds'
     orientation:
       type: string
       label: 'Orientation'
diff --git a/css/better_exposed_filters.css b/css/better_exposed_filters.css
index 30cf32ebb53b999d4bc2b1a37da16f5620182579..aecf0e9c2e30f91f7366f1b19c65f3fb338de2ab 100644
--- a/css/better_exposed_filters.css
+++ b/css/better_exposed_filters.css
@@ -15,3 +15,7 @@
 .bef-exposed-form .form--inline .bef--secondary {
   clear: left;
 }
+
+.bef-exposed-form .noUi-vertical {
+  height: 150px;
+}
diff --git a/js/bef_sliders.js b/js/bef_sliders.js
index 8f857ca6416532a338ce6ee266c2e788a92c740c..54e4540e4d7861ffbbe288e3c6bba13cc19e2dae 100644
--- a/js/bef_sliders.js
+++ b/js/bef_sliders.js
@@ -2,10 +2,10 @@
  * @file
  * bef_sliders.js
  *
- * Adds jQuery UI Slider functionality to an exposed filter.
+ * Adds Sliders functionality to an exposed filter.
  */
 
-(function ($, Drupal, drupalSettings) {
+(function ($, document, Drupal, drupalSettings) {
   Drupal.behaviors.better_exposed_filters_slider = {
     attach: function (context, settings) {
       if (drupalSettings.better_exposed_filters.slider) {
@@ -27,36 +27,39 @@
             $input.val(defaultValue);
 
             // Build the HTML and settings for the slider.
-            var slider = $('<div class="bef-slider"></div>').slider({
-              min: parseFloat(sliderOptions.min),
-              max: parseFloat(sliderOptions.max),
+            var slider = document.createElement('div')
+            slider.className = 'bef-slider';
+            noUiSlider.create(slider, {
+              range: {
+                'min': parseFloat(sliderOptions.min),
+                'max': parseFloat(sliderOptions.max)
+              },
               step: parseFloat(sliderOptions.step),
-              animate: sliderOptions.animate ? sliderOptions.animate : false,
+              animate: sliderOptions.animate ? true : false,
+              animationDuration: parseInt(sliderOptions.animate),
               orientation: sliderOptions.orientation,
-              value: defaultValue,
-              slide: function (event, ui) {
-                $input.val(ui.value);
-              },
-              // This fires when the value is set programmatically or the stop
-              // event fires. This takes care of the case that a user enters a
-              // value into the text field that is not a valid step of the
-              // slider. In that case the slider will go to the nearest step and
-              // this change event will update the text area.
-              change: function (event, ui) {
-                $input.val(ui.value);
-              },
-              // Attach stop listeners.
-              stop: function (event, ui) {
-                // Click the auto submit button.
-                $(this).parents('form').find('[data-bef-auto-submit-click]').click();
-              }
+              start: [defaultValue]
+            });
+            // This fires every time the slider values are changed, either by a
+            // user or by calling API methods. Additionally, it fires
+            // immediately when bound. In most cases, this event should be more
+            // convenient than the 'slide' event.
+            slider.noUiSlider.on('update', function(values, handle) {
+              $input.val(values[handle]);
+            });
+            // This fires every time a slider stops changing, including after
+            // calls to the .set() method. This event can be considered as the
+            // 'end of slide'.
+            slider.noUiSlider.on('set', function() {
+              // Click the auto submit button.
+              $(slider).parents('form').find('[data-bef-auto-submit-click]').click();
             });
 
             $input.after(slider);
 
             // Update the slider when the field is updated.
             $input.blur(function () {
-              befUpdateSlider($(this), null, sliderOptions);
+              befUpdateSlider($(this), null, slider);
             });
           }
           else if ($inputs.length === 2) {
@@ -73,44 +76,40 @@
             $min.val(defaultMin);
             $max.val(defaultMax);
 
-            var slider = $('<div class="bef-slider"></div>').slider({
-              range: true,
-              min: parseFloat(sliderOptions.min),
-              max: parseFloat(sliderOptions.max),
+            var slider = document.createElement('div')
+            slider.className = 'bef-slider';
+            noUiSlider.create(slider, {
+              range: {
+                'min': parseFloat(sliderOptions.min),
+                'max': parseFloat(sliderOptions.max)
+              },
               step: parseFloat(sliderOptions.step),
-              animate: sliderOptions.animate ? sliderOptions.animate : false,
+              animate: sliderOptions.animate ? true : false,
+              animationDuration: parseInt(sliderOptions.animate),
               orientation: sliderOptions.orientation,
-              values: [defaultMin, defaultMax],
-              // Update the textfields as the sliders are moved.
-              slide: function (event, ui) {
-                $min.val(ui.values[0]);
-                $max.val(ui.values[1]);
-              },
-              // This fires when the value is set programmatically or the
-              // stop event fires. This takes care of the case that a user
-              // enters a value into the text field that is not a valid step
-              // of the slider. In that case the slider will go to the
-              // nearest step and this change event will update the text
-              // area.
-              change: function (event, ui) {
-                $min.val(ui.values[0]);
-                $max.val(ui.values[1]);
-              },
-              // Attach stop listeners.
-              stop: function (event, ui) {
-                // Click the auto submit button.
-                $(this).parents('form').find('[data-bef-auto-submit-click]').click();
-              }
+              start: [defaultMin, defaultMax]
+            });
+            // Update the textfields as the sliders are moved.
+            slider.noUiSlider.on('update', function(values) {
+              $min.val(values[0]);
+              $max.val(values[1]);
+            });
+            // This fires every time a slider stops changing, including after
+            // calls to the .set() method. This event can be considered as the
+            // 'end of slide'.
+            slider.noUiSlider.on('set', function() {
+              // Click the auto submit button.
+              $(slider).parents('form').find('[data-bef-auto-submit-click]').click();
             });
 
             $min.after(slider);
 
             // Update the slider when the fields are updated.
             $min.blur(function () {
-              befUpdateSlider($(this), 0, sliderOptions);
+              befUpdateSlider($(this), 0, slider);
             });
             $max.blur(function () {
-              befUpdateSlider($(this), 1, sliderOptions);
+              befUpdateSlider($(this), 1, slider);
             });
           }
         })
@@ -135,13 +134,13 @@
    *   A jQuery object of the updated element.
    * @param valIndex
    *   The index of the value for a range slider or null for a non-range slider.
-   * @param sliderOptions
-   *   The options for the current slider.
+   * @param slider
+   *   The current slider.
    */
-  function befUpdateSlider($el, valIndex, sliderOptions) {
+  function befUpdateSlider($el, valIndex, slider) {
     var val = parseFloat($el.val()),
-        currentMin = $el.parents('div.views-widget').next('.bef-slider').slider('values', 0),
-        currentMax = $el.parents('div.views-widget').next('.bef-slider').slider('values', 1);
+        currentMin = slider.noUiSlider.get(true)[0],
+        currentMax = slider.noUiSlider.get(true)[1];
 
     // If we have a range slider.
     if (valIndex != null) {
@@ -155,13 +154,13 @@
       }
       // If the number is invalid, go back to the last value.
       if (isNaN(val)) {
-        val = $el.parents('div.views-widget').next('.bef-slider').slider('values', valIndex);
+        val = slider.noUiSlider.get(true)[valIndex];
       }
     }
     else {
       // If the number is invalid, go back to the last value.
       if (isNaN(val)) {
-        val = $el.parents('div.views-widget').next('.bef-slider').slider('value');
+        val = slider.noUiSlider.get(true);
       }
     }
     // Make sure we are a number again.
@@ -170,11 +169,11 @@
     // The slider's change event will then update the textfield again so that
     // they both have the same value.
     if (valIndex != null) {
-      $el.parents('div.views-widget').next('.bef-slider').slider('values', valIndex, val);
+      slider.noUiSlider.setHandle(valIndex, val);
     }
     else {
-      $el.parents('div.views-widget').next('.bef-slider').slider('value', val);
+      slider.noUiSlider.set(val);
     }
   }
 
-})(jQuery, Drupal, drupalSettings);
+})(jQuery, this.document, Drupal, drupalSettings);
diff --git a/src/Plugin/better_exposed_filters/filter/Sliders.php b/src/Plugin/better_exposed_filters/filter/Sliders.php
index 19267b5697bd8f96b13b400962f5da03c8718362..ea552c0afe654483161c0888056787aca4c64cbf 100644
--- a/src/Plugin/better_exposed_filters/filter/Sliders.php
+++ b/src/Plugin/better_exposed_filters/filter/Sliders.php
@@ -6,20 +6,20 @@ use Drupal\Component\Utility\Html;
 use Drupal\Core\Form\FormStateInterface;
 
 /**
- * JQuery UI slider widget implementation.
+ * Sliders widget implementation.
  *
  * @BetterExposedFiltersFilterWidget(
  *   id = "bef_sliders",
- *   label = @Translation("jQuery UI Slider"),
+ *   label = @Translation("Sliders"),
  * )
  */
 class Sliders extends FilterWidgetBase {
 
   // Slider animation options.
-  const ANIMATE_NONE = 'none';
-  const ANIMATE_SLOW = 'slow';
-  const ANIMATE_NORMAL = 'normal';
-  const ANIMATE_FAST = 'fast';
+  const ANIMATE_NONE = 0;
+  const ANIMATE_SLOW = 600;
+  const ANIMATE_NORMAL = 400;
+  const ANIMATE_FAST = 200;
   const ANIMATE_CUSTOM = 'custom';
 
   // Slider orientation options.
@@ -72,14 +72,14 @@ class Sliders extends FilterWidgetBase {
       '#type' => 'number',
       '#title' => $this->t('Range minimum'),
       '#default_value' => $this->configuration['min'],
-      '#description' => $this->t('The minimum allowed value for the jQuery range slider. It can be positive, negative, or zero and have up to 11 decimal places.'),
+      '#description' => $this->t('The minimum allowed value for the range slider. It can be positive, negative, or zero and have up to 11 decimal places.'),
     ];
 
     $form['max'] = [
       '#type' => 'number',
       '#title' => $this->t('Range maximum'),
       '#default_value' => $this->configuration['max'],
-      '#description' => $this->t('The maximum allowed value for the jQuery range slider. It can be positive, negative, or zero and have up to 11 decimal places.'),
+      '#description' => $this->t('The maximum allowed value for the range slider. It can be positive, negative, or zero and have up to 11 decimal places.'),
     ];
 
     $form['step'] = [
@@ -95,9 +95,9 @@ class Sliders extends FilterWidgetBase {
       '#title' => $this->t('Animation speed'),
       '#options' => [
         self::ANIMATE_NONE => $this->t('None'),
-        self::ANIMATE_SLOW => $this->t('Slow'),
-        self::ANIMATE_NORMAL => $this->t('Normal'),
-        self::ANIMATE_FAST => $this->t('Fast'),
+        self::ANIMATE_SLOW => $this->t('Slow (600 ms)'),
+        self::ANIMATE_NORMAL => $this->t('Normal (400 ms)'),
+        self::ANIMATE_FAST => $this->t('Fast (200 ms)'),
         self::ANIMATE_CUSTOM => $this->t('Custom'),
       ],
       '#default_value' => $this->configuration['animate'],
@@ -124,7 +124,7 @@ class Sliders extends FilterWidgetBase {
         self::ORIENTATION_VERTICAL => $this->t('Vertical'),
       ],
       '#default_value' => $this->configuration['orientation'],
-      '#description' => $this->t('The orientation of the jQuery range slider.'),
+      '#description' => $this->t('The orientation of the range slider.'),
     ];
 
     return $form;
