diff --git a/modules/config_distro_ignore/src/Plugin/ConfigFilter/DistroIgnoreFilter.php b/modules/config_distro_ignore/src/Plugin/ConfigFilter/DistroIgnoreFilter.php
index 188f62e..1babcef 100644
--- a/modules/config_distro_ignore/src/Plugin/ConfigFilter/DistroIgnoreFilter.php
+++ b/modules/config_distro_ignore/src/Plugin/ConfigFilter/DistroIgnoreFilter.php
@@ -133,16 +133,7 @@ class DistroIgnoreFilter extends ConfigDistroFilterBase implements ContainerFact
     $collection = $this->getSourceStorage()->getCollectionName();
     if ($collection == StorageInterface::DEFAULT_COLLECTION) {
       foreach ($this->configuration['default_collection'] as $name) {
-        // Split the ignore settings so that we can ignore individual keys.
-        $ignore = explode(self::HASH_SEPARATOR, $name);
-        if (fnmatch($ignore[0], $config_name)) {
-          if (isset($ignore[1])) {
-            $hashes[] = $ignore[1];
-          }
-          else {
-            $hashes[] = '';
-          }
-        }
+        $hashes[] = $this->hashToIgnore($config_name, $name);
       }
     }
     else {
@@ -153,22 +144,37 @@ class DistroIgnoreFilter extends ConfigDistroFilterBase implements ContainerFact
       }
 
       foreach ($custom_config as $name) {
-        // Split the ignore settings so that we can ignore individual keys.
-        $ignore = explode(self::HASH_SEPARATOR, $name);
-        if (fnmatch($ignore[0], $config_name)) {
-          if (isset($ignore[1])) {
-            $hashes[] = $ignore[1];
-          }
-          else {
-            $hashes[] = '';
-          }
-        }
+        $hashes[] = $this->hashToIgnore($config_name, $name);
       }
     }
 
     return $hashes;
   }
 
+  /**
+   * Get the hash of the config to ignore.
+   *
+   * @param string $config_name
+   *   The config name.
+   * @param string $name
+   *   Hash to check.
+   *
+   * @return string
+   *   The hash to ignore, an empty string means unconditionally ignore.
+   */
+  private function hashToIgnore($config_name, $name) {
+    $hash = '';
+    // Split the ignore settings so that we can ignore individual keys.
+    $ignore = explode(self::HASH_SEPARATOR, $name);
+    $pattern = '/' . preg_quote($ignore[0], '/') . '/';
+    if (preg_match($pattern, $config_name)) {
+      if (isset($ignore[1])) {
+        $hashes[] = $ignore[1];
+      }
+    }
+    return $hash;
+  }
+
   /**
    * Read from the active configuration.
    *
