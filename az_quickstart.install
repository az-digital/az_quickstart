<?php

/**
 * @file
 * Install, update and uninstall functions for az_quickstart install profile.
 */

use Drupal\Core\Extension\MissingDependencyException;
use Drupal\Core\Link;
use Drupal\Core\Render\Markup;
use Drupal\Core\Url;
use Drupal\user\Entity\User;
use Drupal\shortcut\Entity\Shortcut;

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 *
 * @see system_install()
 */
function az_quickstart_install() {
  // Assign user 1 the "administrator" role.
  $user = User::load(1);
  $user->roles[] = 'administrator';
  $user->save();

  // Populate the default shortcut set.
  $shortcut = Shortcut::create([
    'shortcut_set' => 'default',
    'title' => t('Add content'),
    'weight' => -20,
    'link' => ['uri' => 'internal:/node/add'],
  ]);
  $shortcut->save();

  $shortcut = Shortcut::create([
    'shortcut_set' => 'default',
    'title' => t('All content'),
    'weight' => -19,
    'link' => ['uri' => 'internal:/admin/content'],
  ]);
  $shortcut->save();

  // Install Pantheon module dependencies when running on Pantheon.
  if (defined('PANTHEON_ENVIRONMENT')) {
    $pantheon_modules = [
      'pantheon_advanced_page_cache',
      'environment_indicator',
    ];
    foreach ($pantheon_modules as $module) {
      try {
        \Drupal::service('module_installer')->install([$module]);
      }
      catch (MissingDependencyException $e) {
        \Drupal::logger('az_quickstart')->warning('@module module not available to install.', ['@module' => $module]);
      }
    }
  }
}

/**
 * Implements hook_requireents().
 */
function az_quickstart_requirements($phase) {
  $requirements = [];
  if ($phase === 'runtime') {
    // Reset the extension lists.
    /** @var \Drupal\Core\Extension\ModuleExtensionList $module_extension_list */
    $module_extension_list = \Drupal::service('extension.list.module');
    $module_extension_list->reset();

    // Gather all deprecated modules that are enabled.
    $azqs_deprecated_modules = [
      'background_image_formatter',
      'ckeditor',
      'entity_browser',
    ];
    $enabled_deprecated_modules = [];
    $enabled_modules = \Drupal::moduleHandler()->getModuleList();
    foreach ($enabled_modules as $module => $data) {
      if (in_array($module, $azqs_deprecated_modules)) {
        $enabled_deprecated_modules[$module] = $module_extension_list->getExtensionInfo($module)['name'];
      }
    }

    // Warn if any deprecated modules are installed.
    if (!empty($enabled_deprecated_modules)) {
      foreach ($enabled_deprecated_modules as $deprecated_module => $name) {
        $deprecated_modules_link_list[] = (string) Link::fromTextAndUrl($name, Url::fromUri('https://www.drupal.org/project/' . $deprecated_module))->toString();
      }
      $requirements['azqs_deprecated_modules'] = [
        'title' => t('Quickstart deprecated modules enabled'),
        'description' => t('These modules are no longer used by Arizona Quickstart and will be removed in a future release.  These modules should be uninstalled or should be added to a site-specific composer.json file if they are still needed, or your site will not be able to be updated via Composer.  Some action is required prior to updating to the next minor version.'),
        'value' => t('Enabled Quickstart deprecated modules found: %module_list.', [
          '%module_list' => Markup::create(implode(', ', $deprecated_modules_link_list)),
        ]),
        'severity' => REQUIREMENT_WARNING,
      ];
    }
  }

  return $requirements;
}

/**
 * Implements hook_update_last_removed().
 */
function az_quickstart_update_last_removed() {
  // Remove updates added before 2.6.0.
  return 920103;
}

/**
 * Uninstall the deprecated media_library_theme_reset module.
 */
function az_quickstart_update_920601() {
  \Drupal::service('module_installer')->uninstall(['media_library_theme_reset']);
}

/**
 * Change Arizona Bootstrap CDN references.
 */
function az_quickstart_update_920602() {
  $config = \Drupal::service('config.factory')->getEditable('az_barrio.settings');
  if ($config->get('az_bootstrap_cdn_version') === 'main') {
    $config->set('az_bootstrap_cdn_version', '2.x')->save(TRUE);
  }
  if ($config->get('az_bootstrap_cdn_version') === 'latest') {
    $config->set('az_bootstrap_cdn_version', 'latest-2.x')->save(TRUE);
  }
}

/**
 * Uninstall deprecated Drupal core modules.
 */
function az_quickstart_update_920603() {
  $deprecated_modules = [
    'aggregator',
    'color',
    'hal',
    'quickedit',
    'rdf',
  ];
  \Drupal::service('module_installer')->uninstall($deprecated_modules);
}

/**
 * Ensure block_class module is installed.
 */
function az_quickstart_update_920604() {
  \Drupal::service('module_installer')->install(['block_class']);
}

/**
 * Ensure media_entity_file_replace module is installed.
 */
function az_quickstart_update_920701() {
  \Drupal::service('module_installer')->install(['media_entity_file_replace']);
}

/**
 * Enable az_paragraphs_splitscreen module by default.
 */
function az_quickstart_update_920702() {
  \Drupal::service('module_installer')->install(['az_paragraphs_splitscreen']);
}

/**
 * Ensure ckeditor5 module is installed.
 */
function az_quickstart_update_1020801() {
  \Drupal::service('module_installer')->install(['ckeditor5']);
}

/**
 * Enable extlink module by default.
 */
function az_quickstart_update_1020802() {
  \Drupal::service('module_installer')->install(['extlink']);
}
