name: az_quickstart
recipe: drupal8
config:
  php: '7.3'
  via: apache:2.4
  webroot: web
  database: mysql:5.7
  xdebug: false
services:
  appserver:
    composer:
      hirak/prestissimo: ^0.3.9
    overrides:
      environment:
        SIMPLETEST_DB: 'mysql://drupal8:drupal8@database/drupal8'
        SIMPLETEST_BASE_URL: 'http://localhost'
      volumes:
        # Don't share our host working directory as /app. We want /app empty for composer.
        - /app
        # Instead share our host working directory as a standalone package.
        - .:/usr/local/quickstart-install-profile
    build:
      # Create a new quickstart project and use the installation profile as a non-packagist repository.
      # Use the matching scaffolding branch if available.
      - BRANCH_NAME=$(git -C /usr/local/quickstart-install-profile rev-parse --abbrev-ref HEAD); if [ $(git ls-remote --heads https://github.com/az-digital/az-quickstart-scaffolding.git $BRANCH_NAME | wc -l) = 1 ]; then SCAFFOLD_BRANCH="$BRANCH_NAME"; else SCAFFOLD_BRANCH="main"; fi; git clone --branch $SCAFFOLD_BRANCH https://github.com/az-digital/az-quickstart-scaffolding.git /app
      - composer config repositories.localdev path /usr/local/quickstart-install-profile && composer require --no-update drupal/core-recommended:* zaporylie/composer-drupal-optimizations:* az-digital/az_quickstart:\*@dev
      - composer install
  node:
    type: node:12.16
    build:
      - yarn install
    globals:
      eslint-config-drupal-bundle: 1.0.2
tooling:
  # Provide a command to install Drupal.
  # Current versions of the Bitnami MySQL container sometimes signal
  # healthy before MySQL is fully started. This can result in MySQL errors
  # in a race condition if Drupal is installed during the run phase.
  install:
    service: appserver
    cmd: /app/vendor/bin/drush --root=/app/web site:install --account-mail=noreply@email.arizona.edu --account-name=azadmin --account-pass=azadmin --db-url=mysql://drupal8:drupal8@database:3306/drupal8 -y --verbose
  # Provide Drush tooling to automatically know the Drupal root.
  drush:
    service: appserver
    cmd: /app/vendor/bin/drush --root=/app/web
  # Provide Drupal console tooling to automatically know the Drupal root.
  drupal:
    service: appserver
    cmd: /app/vendor/bin/drupal --root=/app/web
  # Provide phpcs tooling to check coding standards.
  phpcs:
    service: appserver
    cmd: /app/vendor/bin/phpcs --colors --standard=web/profiles/custom/az_quickstart/phpcs.xml.dist web/profiles/custom/az_quickstart
  # Provide phpunit tooling to run unit tests.
  phpunit:
    service: appserver
    cmd: /app/vendor/bin/phpunit --configuration web/profiles/custom/az_quickstart/phpunit.xml.dist --bootstrap web/core/tests/bootstrap.php web/profiles/custom/az_quickstart
  # Provide drupal-check tooling to check for deprecated custom code.
  drupal-check:
    service: appserver
    cmd: /app/vendor/bin/drupal-check web/profiles
  # Provide phpstan tooling to check for deprecated contrib module/theme code.
  phpstan:
    service: appserver
    cmd: /app/vendor/bin/phpstan analyse --configuration web/profiles/custom/az_quickstart/phpstan.neon web/modules web/themes
  yarn:
    service: node
    cmd: yarn
  eslint:
    service: node
    cmd: eslint --color
  # Provide a composer tooling that executes commands in the profile and then updates the attached scaffolding.
  composer:
    service: appserver
    cmd:
      # Run command against the install profile's composer.json - eg. profile dependencies.
      - composer --working-dir=/usr/local/quickstart-install-profile --no-scripts --no-update
      # Now issue a composer update/install for the scaffolding folder to pull in new dependencies.
      # "true" command consumes passed Lando arguments that were only intended to be passed to the previous call.
      - composer --working-dir=/app --no-scripts update && composer --working-dir=/app install && true
