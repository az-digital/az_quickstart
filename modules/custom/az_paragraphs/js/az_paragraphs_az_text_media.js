/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/

(function ($, Drupal) {
  Drupal.behaviors.az_youtube_video_bg = {
    attach: function attach(context, settings) {
      if (window.screen && window.screen.width > 768) {
        var defaults = {
          ratio: 16 / 9,
          videoId: "",
          mute: true,
          repeat: true,
          width: $(window).width(),
          playButtonClass: "az-video-play",
          pauseButtonClass: "az-video-pause",
          muteButtonClass: "az-video-mute",
          volumeUpClass: "az-video-volume-up",
          volumeDownClass: "az-video-volume-down",
          increaseVolumeBy: 10,
          start: 0,
          minimumSupportedWidth: 600
        };
        var bgVideos = settings.azFieldsMedia.bgVideos;
        var tag = document.createElement("script");
        var firstScriptTag = document.getElementsByTagName("script")[0];
        tag.src = "https://www.youtube.com/iframe_api";
        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

        window.onYouTubeIframeAPIReady = function () {
          $.each(bgVideos, function (i, value) {
            bgVideos[i] = $.extend({}, defaults, value);
            var options = bgVideos[i];
            options.playButtonClass = ".video-play-".concat(i);
            options.pauseButtonClass = ".video-pause-".concat(i);
            var videoContainer = "<div id=\"".concat(i, "-container\" style=\"overflow: hidden; width: 100%; height: 100%\" class=\"az-video-container\"><div id=\"").concat(i, "-player\" style=\"position: absolute\"></div></div>");
            var videoContainerOverflow = "<div id=\"".concat(i, "-overflow-container\"class=\"az-video-overflow-container\"></div>");
            $("#".concat(i, "-bg-video-container")).prepend(videoContainer).prepend(videoContainerOverflow).css({
              position: "relative"
            });
            var player = window.YT;
            bgVideos[i].player = new player.Player("".concat(i, "-player"), {
              width: options.width,
              height: Math.ceil(options.width / options.ratio),
              videoId: i,
              playerVars: {
                modestbranding: 1,
                controls: 0,
                showinfo: 0,
                rel: 0,
                wmode: "transparent"
              },
              events: {
                onReady: window.onPlayerReady,
                onStateChange: window.onPlayerStateChange
              }
            });
            $("#".concat(i, "-bg-video-container")).on("click", "".concat(options.playButtonClass), function (e) {
              e.preventDefault();
              bgVideos[i].player.playVideo();
              $("#".concat(i, "-bg-video-container")).removeClass("az-video-paused").addClass("az-video-playing");
            }).on("click", "".concat(options.pauseButtonClass), function (e) {
              e.preventDefault();
              bgVideos[i].player.pauseVideo();
              $("#".concat(i, "-bg-video-container")).removeClass("az-video-playing").addClass("az-video-paused");
            }).on("click", "".concat(options.muteButtonClass), function (e) {
              e.preventDefault();

              if (bgVideos[i].player.isMuted()) {
                bgVideos[i].player.unMute();
              } else {
                bgVideos[i].player.mute();
              }
            }).on("click", "".concat(options.volumeDownClass), function (e) {
              e.preventDefault();
              var currentVolume = bgVideos[i].player.getVolume();

              if (currentVolume < options.increaseVolumeBy) {
                currentVolume = options.increaseVolumeBy;
              }

              bgVideos[i].player.setVolume(currentVolume - options.increaseVolumeBy);
            }).on("click", "".concat(options.volumeUpClass), function (e) {
              e.preventDefault();

              if (settings.azFieldsMedia.bgVideos[i].player.isMuted()) {
                bgVideos[i].player.unMute();
              }

              var currentVolume = bgVideos[i].player.getVolume();

              if (currentVolume > 100 - options.increaseVolumeBy) {
                currentVolume = 100 - options.increaseVolumeBy;
              }

              bgVideos[i].player.setVolume(currentVolume + options.increaseVolumeBy);
            });
          });
        };

        var resize = function resize() {
          $.each(bgVideos, function (i, value) {
            var width = $("#".concat(i, "-bg-video-container")).width();
            var pWidth;
            var height = $("#".concat(i, "-bg-video-container")).height();
            var pHeight;

            if (width / value.ratio < height) {
              pWidth = Math.ceil(height * value.ratio);
              $("#".concat(value.videoId, "-player")).width(pWidth).height(height).css({
                left: (width - pWidth) / 2,
                top: 0
              });
              $("#".concat(value.videoId, "-overflow-container")).width(pWidth).height(height).css({
                "border-top-width": (height - pHeight) / 2,
                left: 0,
                top: (height - pHeight) / 2
              });
            } else {
              pHeight = Math.ceil(width / value.ratio);
              $("#".concat(value.videoId, "-player")).width(width).height(pHeight).css({
                left: 0,
                top: (height - pHeight) / 2
              });
              $("#".concat(value.videoId, "-overflow-container")).width(pWidth).height(height).css({
                "border-top-width": (height - pHeight) / 2,
                left: 0,
                top: (height - pHeight) / 2
              });
            }
          });
        };

        window.onPlayerReady = function (e) {
          var id = e.target.playerInfo.videoData.video_id;

          if (bgVideos[id].mute) {
            e.target.mute();
          }

          e.target.seekTo(bgVideos[id].start);
          e.target.playVideo();
        };

        window.onPlayerStateChange = function (e) {
          var id = e.target.playerInfo.videoData.video_id;

          if (e.data === 1) {
            resize();
            $("#".concat(id, "-bg-video-container")).addClass("az-video-playing").removeClass("az-video-loading");
          }

          if (e.data === 0 && bgVideos[id].repeat) {
            bgVideos[id].player.seekTo(bgVideos[id].start);
          }
        };

        $(window).on("resize.bgVideo", function () {
          resize();
        });
      }
    }
  };
})(jQuery, Drupal, drupalSettings);