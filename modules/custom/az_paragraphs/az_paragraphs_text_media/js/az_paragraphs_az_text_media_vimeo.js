/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/
(function ($, Drupal) {
  Drupal.behaviors.az_vimeo_video_bg = {
    attach: function attach(context, settings) {
      if (window.screen && window.screen.width > 768) {
        var defaults = {
          ratio: 16 / 9,
          vimeoId: "",
          mute: true,
          repeat: true,
          width: $(window).width(),
          playButtonClass: "az-video-play",
          pauseButtonClass: "az-video-pause",
          start: 0,
          minimumSupportedWidth: 600
        };
        var bgVideos = settings.azFieldsMedia.bgVideos;
        var bgVideoParagraphs = document.getElementsByClassName("az-js-vimeo-video-background");
        var tag = document.createElement("script");
        tag.src = "https://player.vimeo.com/api/player.js";
        document.head.appendChild(tag);
        tag.onload = function () {
          $.each(bgVideoParagraphs, function (index) {
            var thisContainer = bgVideoParagraphs[index];
            var parentParagraph = thisContainer.parentNode;
            var vimeoId = thisContainer.dataset.vimeoId;
            bgVideos[vimeoId] = $.extend({}, defaults, thisContainer);
            var options = bgVideos[vimeoId];
            var videoPlayer = thisContainer.getElementsByClassName("az-video-player")[0];
            var VimeoPlayer = window.Vimeo;
            thisContainer.player = new VimeoPlayer.Player(videoPlayer, {
              id: vimeoId,
              width: options.width,
              height: Math.ceil(options.width / options.ratio),
              autoplay: true,
              muted: options.mute,
              loop: options.repeat
            });
            thisContainer.player.on("play", function () {
              parentParagraph.classList.add("az-video-playing");
              parentParagraph.classList.remove("az-video-paused");
            });
            thisContainer.player.on("pause", function () {
              parentParagraph.classList.add("az-video-paused");
              parentParagraph.classList.remove("az-video-playing");
            });
            thisContainer.player.on("ended", function () {
              if (options.repeat) {
                thisContainer.player.setCurrentTime(0).then(function () {
                  thisContainer.player.play();
                });
              }
            });
            var playButton = bgVideoParagraphs[index].getElementsByClassName("az-video-play")[0];
            playButton.addEventListener("click", function (event) {
              event.preventDefault();
              bgVideoParagraphs[index].player.play();
            });
            var pauseButton = bgVideoParagraphs[index].getElementsByClassName("az-video-pause")[0];
            pauseButton.addEventListener("click", function (event) {
              event.preventDefault();
              bgVideoParagraphs[index].player.pause();
            });
          });
        };
        var setDimensions = function setDimensions(container) {
          var parentParagraph = container.parentNode;
          var vimeoId = container.dataset.vimeoId;
          var thisPlayer = container.getElementsByClassName('az-video-player')[0];
          thisPlayer.style.zIndex = -100;
          var style = container.dataset.style;
          var width = container.offsetWidth;
          var height = container.offsetHeight;
          var ratio = bgVideos[vimeoId].ratio;
          var pWidth = Math.ceil(height * ratio);
          var pHeight = Math.ceil(width / ratio);
          var parentHeight = parentParagraph.offsetHeight;
          parentHeight = "".concat(parentHeight.toString(), "px");
          container.style.height = parentHeight;
          if (style === 'bottom') {
            container.style.top = 0;
          }
          var widthMinuspWidthdividedbyTwo = (width - pWidth) / 2;
          widthMinuspWidthdividedbyTwo = "".concat(widthMinuspWidthdividedbyTwo.toString(), "px");
          var pHeightRatio = (height - pHeight) / 2;
          pHeightRatio = "".concat(pHeightRatio.toString(), "px");
          if (width / ratio < height) {
            thisPlayer.width = pWidth;
            thisPlayer.height = height;
            thisPlayer.style.left = widthMinuspWidthdividedbyTwo;
            thisPlayer.style.top = 0;
          } else {
            thisPlayer.height = pHeight;
            thisPlayer.width = width;
            thisPlayer.style.top = pHeightRatio;
            thisPlayer.style.left = 0;
          }
        };
        var resize = function resize() {
          $.each(bgVideoParagraphs, function (index) {
            setDimensions(bgVideoParagraphs[index]);
          });
        };
        $(window).on("load", function () {
          resize();
        });
        $(window).on("resize.bgVideo", function () {
          resize();
        });
      }
    }
  };
})(jQuery, Drupal, drupalSettings);