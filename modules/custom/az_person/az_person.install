<?php

/**
 * @file
 * Install, update and uninstall functions for az_person module.
 */

use Drupal\az_core\Utility\AZBootstrapMarkupConverter;

/**
 * Implements hook_update_last_removed().
 */
function az_person_update_last_removed() {
  // Remove updates added before 2.6.0.
  return 920501;
}

/**
 * Apply Bootstrap 5 compatibility updates to person body fields.
 */
function az_person_update_1130001(&$sandbox) {
  $logger = \Drupal::logger('az_person');
  $node_storage = \Drupal::service('entity_type.manager')->getStorage('node');

  if (!isset($sandbox['progress'])) {
    // Find all person nodes that have content in the body field
    // and are using az_standard or full_html format.
    $query = $node_storage->getQuery()
      ->condition('type', 'az_person')
      ->condition('field_az_body.format', ['az_standard', 'full_html'], 'IN')
      ->exists('field_az_body')
      ->accessCheck(FALSE);

    $sandbox['ids'] = $query->execute();
    $sandbox['max'] = count($sandbox['ids']);
    $sandbox['progress'] = 0;
    $sandbox['updated_count'] = 0;
  }

  // Process 20 nodes at a time.
  $ids = array_slice($sandbox['ids'], $sandbox['progress'], 20);

  foreach ($ids as $id) {
    /** @var \Drupal\node\Entity\Node|null $node */
    $node = $node_storage->load($id);
    if (!$node) {
      $logger->warning('Could not load person node @nid', ['@nid' => $id]);
      continue;
    }

    $needs_update = FALSE;
    $field = $node->get('field_az_body');
    $original_value = $field->value;

    if (!empty($original_value)) {
      $processed_value = AZBootstrapMarkupConverter::convert($original_value);
      if ($processed_value !== $original_value) {
        $node->set('field_az_body', $processed_value);
        $needs_update = TRUE;
      }
    }

    if ($needs_update) {
      $node->setNewRevision(TRUE);
      $node->setRevisionLogMessage('Updated person body for Arizona Bootstrap 5 compatibility.');
      $node->save();

      $logger->info('Updated person body for node @nid (revision: @vid)', [
        '@nid' => $id,
        '@vid' => $node->getRevisionId(),
      ]);

      $sandbox['updated_count']++;
    }

    $sandbox['progress']++;
  }

  $sandbox['#finished'] = empty($sandbox['max']) ? 1 : ($sandbox['progress'] / $sandbox['max']);

  if ($sandbox['#finished'] >= 1) {
    return t('Completed processing @count total person nodes. @nodes_updated nodes were updated for Bootstrap 5 compatibility.', [
      '@count' => $sandbox['progress'],
      '@nodes_updated' => $sandbox['updated_count'],
    ]);
  }

  return NULL;
}
