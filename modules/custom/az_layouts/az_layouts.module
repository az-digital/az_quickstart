<?php

/**
 * @file
 * Contains az_layouts.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Component\Serialization\Json;
use Drupal\az_layouts\Element\AZLayoutBuilder;

/**
 * Implements hook_help().
 */
function az_layouts_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the az_layouts module.
    case 'help.page.az_layouts':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Layout plugins and contrib modules to enhance core Layout Builder.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Alter Element plugin definitions for LayoutBuilder to use a subclass.
 *
 * @param array $definitions
 *   An array of Element plugin definitions.
 *
 * @see \Drupal\Core\Render\ElementInfoManager
 * @see \Drupal\Core\Render\Element\ElementInterface
 */
function az_layouts_element_plugin_alter(array &$definitions) {
  // Use a custom class for the LayoutBuilder element.
  $definitions['layout_builder']['class'] = '\Drupal\az_layouts\Element\AZLayoutBuilder';
}

/**
 * Implements hook_contextual_links_alter().
 */
function az_layouts_contextual_links_alter(array &$links, $group, array $route_parameters) {

  // Set width of off-canvas window when updating layout custom inline blocks.
  if (isset($links['layout_builder_block_update'])) {
    $links['layout_builder_block_update']['localized_options']['attributes']['data-dialog-options'] = Json::encode([
      'width' => AZLayoutBuilder::BUILDER_WIDTH,
    ]);
  }

}

/**
 * Implements hook_link_alter().
 */
function az_layouts_link_alter(&$variables) {

  /** @var Drupal\Core\Url $url */
  $url = $variables['url'];

  // Only proceed if this link was constructed from a route.
  if (!$url->isRouted()) {
    return;
  }

  // Find which route this link was built from.
  $route_name = $url->getRouteName();

  // List the routes in need of off-canvas window modification for layouts.
  $known_routes = [
    'layout_builder.add_block',
    'layout_builder.choose_section',
    'layout_builder.configure_section',
    'layout_builder.update_block',
  ];

  // Only address links specifically related to layout forms.
  if (in_array($route_name, $known_routes, TRUE)) {
    // Only modify ajax links, only these open the off-canvas menu.
    if (isset($variables['options']['attributes']['class']) && in_array('use-ajax', $variables['options']['attributes']['class'], TRUE)) {
      // Set the width of the off-canvas window for our known routes.
      $variables['options']['attributes']['data-dialog-options'] = Json::encode([
        'width' => AZLayoutBuilder::BUILDER_WIDTH,
      ]);
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function az_layouts_form_layout_builder_add_block_alter(&$form, FormStateInterface $form_state, $form_id) {

  // Attach library for offscreen block configuration dialog.
  $form['#attached']['library'][] = 'az_layouts/az_layouts.dialog';
  \Drupal::service("az_layouts.customize_inline_block_form")->alterForm($form, $form_state, $form_id);
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function az_layouts_form_layout_builder_update_block_alter(&$form, FormStateInterface $form_state, $form_id) {

  // Attach library for offscreen block configuration dialog.
  $form['#attached']['library'][] = 'az_layouts/az_layouts.dialog';
  \Drupal::service("az_layouts.customize_inline_block_form")->alterForm($form, $form_state, $form_id);
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function az_layouts_form_node_az_flexible_page_layout_builder_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  // Attach library for the layout builder section interface.
  $form['#attached']['library'][] = 'az_layouts/az_layouts.layouts';

  // Hide the initial "You are editing the layout..." message.
  if (isset($form['layout_builder_message'])) {
    unset($form['layout_builder_message']);
  }

  // Render the submit buttons in their natural order.
  if (isset($form['actions']['#weight'])) {
    unset($form['actions']['#weight']);
  }

}
