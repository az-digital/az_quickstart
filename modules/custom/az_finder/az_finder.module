<?php

/**
 * @file
 * Contains az_finder.module.
 */

/**
 * Implements hook_theme().
 */
function az_finder_theme($existing, $type, $theme, $path) {
  return [
    'az_finder_widget' => [
      'render element' => 'element',
    ],
  ];
}

/**
 * Implements hook_preprocess_HOOK() for az_finder_widget.
 */
function template_preprocess_az_finder_widget(&$variables) {
  // Check if the class exists.
  if (class_exists('\Drupal\az_finder\Plugin\better_exposed_filters\filter\AzFinderWidget')) {
    // Create an instance of the AzFinderWidget class.
    $widget = \Drupal::service('plugin.manager.better_exposed_filters_filter_widget')
      ->createInstance('az_finder', []);
    // Call the preprocessAzFinderWidget method with the variables.
    try {
      $widget->preprocessAzFinderWidget($variables);
    }
    catch (\Exception $e) {
      // Log any errors.
      \Drupal::logger('az_finder')->error('Error in preprocessAzFinderWidget: @message', ['@message' => $e->getMessage()]);
    }
  }
}

/**
 * Implements hook_preprocess_HOOK() for views_view.
 */
function az_finder_preprocess_views_view(&$variables) {
  $view = $variables['view'];

  // Early exit if conditions are not met to reduce nesting.
  if (empty($view->display_handler->options['exposed_form']['type']) ||
      $view->display_handler->options['exposed_form']['type'] !== 'az_bef' ||
      empty($view->display_handler->options['exposed_form']['options']['bef']['az_finder'])) {
    return;
  }

  $az_bef_options = $view->display_handler->options['exposed_form']['options']['bef']['az_finder'];
  $skip_link_id = $az_bef_options['skip_link_id'];
  $skip_link_text = $az_bef_options['skip_link_text'];

  $skip_to_filter = [
    '#type' => 'html_tag',
    '#tag' => 'a',
    '#value' => t('Skip to search and filter'),
    '#attributes' => [
      'href' => '#search-filter',
      'class' => [
        'visually-hidden',
        'focusable',
        'skip-link',
      ],
    ],
  ];

  $variables['header'][] = $skip_to_filter;
}
