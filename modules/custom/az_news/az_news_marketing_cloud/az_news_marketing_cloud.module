<?php

/**
 * Implements hook_theme().
 */
function html__export__marketing_cloud_theme($existing, $type, $theme, $path) {

  return [
    'html__export__marketing_cloud' => [
      'render element' => 'children',
      // If no template name is defined here,
      // it defaults to the name of the theme hook,
      // ie. module-name-theme-hook.html.twig
      'template' => 'az-news-marketing-cloud',
      // Optionally define path to Twig template files.
      // Defaults to the module's ./templates/ directory.
      'path' => $path . '/templates',
      // Optionally define variables that will be passed to the Twig
      // template and set default values for them.
      'variables' => [
        'variable1' => 'Yet another default text.',
        'variable2' => 0,
        'variable3' => [0, 0, 0],
      'variables' => [
        'test_var' => NULL
      ],
      ],
    ],
  ];
}

/**
 * Implements hook_theme_registry_alter().
 */
function az_news_marketing_cloud_theme_registry_alter(&$theme_registry) {
  if ($theme_registry['field_multiple_value_form']) {
    if (isset($theme_registry['field_multiple_value_form']['preprocess functions'])) {
      $key = array_search('paragraphs_preprocess_field_multiple_value_form', $theme_registry['field_multiple_value_form']['preprocess functions'], TRUE);
      unset($theme_registry['field_multiple_value_form']['preprocess functions'][$key]);
      $theme_registry['field_multiple_value_form']['preprocess functions'][] = 'paragraphs_preprocess_field_multiple_value_form';
    }
  }

  $module_path = \Drupal::service('extension.list.module')->getPath('az_news_marketing_cloud');
  // Find all .html.twig files in this module's folder recursively.
  $template_file_objects = drupal_find_theme_templates($theme_registry, '.html.twig', $module_path);
  // Iterate through all found template file objects.
  foreach ($template_file_objects as $key => $template_file_object) {
    // If the template has not already been overridden by a theme.
    if (!isset($theme_registry[$key]['theme path']) || strpos($theme_registry[$key]['theme path'], 'themes/') === FALSE) {
      // Copy default paragraph registry entry for paragraph entries.
      if (strpos($key, 'paragraph__') === 0) {
        $theme_registry[$key] = $theme_registry['paragraph'];
      }
      // Alter the theme path and template elements.
      $theme_registry[$key]['theme path'] = $module_path;
      $theme_registry[$key] = array_merge($theme_registry[$key], $template_file_object);
      $theme_registry[$key]['type'] = 'module';
    }
  }
}