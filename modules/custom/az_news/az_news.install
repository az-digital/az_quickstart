<?php

/**
 * @file
 * Install, update and uninstall functions for az_news module.
 */

use Drupal\Core\Config\FileStorage;
use Drupal\Core\Entity\EntityStorageException;

/**
 * Implements hook_update_last_removed().
 */
function az_news_update_last_removed() {
  // Remove updates added before 2.6.0.
  return 920301;
}

/**
 * Add two new fields to az_news content type to allow overriding news thumbs.
 *
 * Create field_az_featured_image_as_thumb on az_news content type.
 * Create field_az_media_thumbnail_image on az_news content type.
 *
 * @see https://github.com/az-digital/az_quickstart/issues/2504
 */
function az_news_update_1020701() {

  $field_config_to_add = [
    'az_core' => [
      'field.storage.node.field_az_featured_image_as_thumb',
      'field.storage.node.field_az_media_thumbnail_image',
    ],
    'az_news' => [
      'field.field.node.az_news.field_az_featured_image_as_thumb',
      'field.field.node.az_news.field_az_media_thumbnail_image',
    ],
  ];

  foreach ($field_config_to_add as $module => $configs) {
    $module_path = \Drupal::service('extension.list.module')->getPath($module);
    $config_storage = new FileStorage($module_path . '/config/install');
    foreach ($configs as $field_config_id) {
      $entity_type = \Drupal::service('config.manager')->getEntityTypeIdByName($field_config_id);
      $storage = \Drupal::entityTypeManager()->getStorage($entity_type);
      $config_record = $config_storage->read($field_config_id);

      try {
        /** @var \Drupal\Core\Config\Entity\ConfigEntityStorageInterface $storage */
        $entity = $storage->createFromStorageRecord($config_record);
        $entity->save();
      }
      catch (EntityStorageException $e) {
        \Drupal::logger('az_news')->notice($e->getMessage());
      }
    }
  }

}

/**
 * Apply Bootstrap 5 compatibility updates to news body fields.
 */
function az_news_update_1130001(&$sandbox) {
  if (!isset($sandbox['ids'])) {
    $query = \Drupal::entityTypeManager()
      ->getStorage('node')
      ->getQuery()
      ->condition('type', 'az_news')
      ->condition('field_az_body.format', ['az_standard', 'full_html'], 'IN')
      ->exists('field_az_body')
      ->accessCheck(FALSE);

    $sandbox['ids'] = $query->execute();
    $sandbox['max'] = count($sandbox['ids']);
  }

  return \Drupal::service('az_core.content_field_updater')
    ->processFieldUpdates(
      'node',
      'az_news',
      'field_az_body',
      'Drupal\az_core\Utility\AZBootstrapMarkupConverter::compareProcessor',
      $sandbox,
      [
        'create_revisions' => TRUE,
        'prefix' => __FUNCTION__,
        'suffix' => 'for Bootstrap 5 compatibility',
      ]
    );
}
