<?php

/**
 * @file
 * Install and update functions for the User expire module.
 */

/**
 * Implements hook_schema().
 *
 * {@inheritdoc}
 */
function user_expire_schema() {
  $schema['user_expire'] = [
    'description' => 'The tracking table for user expirations.',
    'fields' => [
      'uid' => [
        'description' => 'The primary identifier for a user.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ],
      'expiration' => [
        'description' => 'The Unix timestamp when the user will be disabled.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ],
    ],
    'foreign keys' => [
      'uid' => [
        'table' => 'users_field_data',
        'columns' => ['uid' => 'uid'],
      ],
    ],
    'primary key' => ['uid'],
  ];

  return $schema;
}

/**
 * Remove last_run from config.
 */
function user_expire_update_8001(): void {
  $config_factory = \Drupal::configFactory();
  $config = $config_factory->getEditable('user_expire.settings');
  $config->clear('last_run');
  $config->save();
}

/**
 * Convert user_expire_roles to config.
 */
function user_expire_update_8002(): void {
  $rules = \Drupal::database()->select('user_expire_roles', 'uer')
    ->fields('uer', ['rid', 'inactivity_period'])
    ->execute()->fetchAllAssoc('rid');

  // Convert structure.
  foreach ($rules as &$rule) {
    $rule = (int) $rule->inactivity_period;
  }

  $config_factory = \Drupal::configFactory();
  $config = $config_factory->getEditable('user_expire.settings');
  $config->set('user_expire_roles', $rules);
  $config->save();
  \Drupal::database()->schema()->dropTable('user_expire_roles');
}

/**
 * Ensure the user module is installed.
 */
function user_expire_update_10201(): void {
  if (!\Drupal::moduleHandler()->moduleExists('user')) {
    \Drupal::service('module_installer')->install(['user']);
  }
}

/**
 * Save default values for new notification email settings.
 */
function user_expire_update_10202(): void {
  $config_factory = \Drupal::configFactory();
  $config = $config_factory->getEditable('user_expire.settings');
  $config->set('send_expiration_warnings', TRUE);
  $config->set('expiration_warning_mail', [
    'subject' => '[site:name]: Account expiration warning',
    'body' => 'Hello [user:display-name]\r\n\r\nBecause you have not logged in recently, your account at [site:name] will be blocked in the near future. If you still use this site, log in now [site:login-url] to prevent your account being blocked.\r\n\r\n-- [site:name] team',
  ]);
  $config->save();
}
